<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ProductDBDataSet" targetNamespace="http://tempuri.org/ProductDBDataSet.xsd" xmlns:mstns="http://tempuri.org/ProductDBDataSet.xsd" xmlns="http://tempuri.org/ProductDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ProductDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ProductDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.NewProductDatabase.Properties.Settings.GlobalReference.Default.ProductDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProductsTableTableAdapter" GeneratorDataComponentClassName="ProductsTableTableAdapter" Name="ProductsTable" UserDataComponentName="ProductsTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ProductDBConnectionString (Settings)" DbObjectName="dbo.ProductsTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ProductsTable] WHERE (([Product_Number] = @Original_Product_Number) AND ([Description] = @Original_Description) AND ([Units_On_Hand] = @Original_Units_On_Hand) AND ([Price] = @Original_Price))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Product_Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Product_Number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Units_On_Hand" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Units_On_Hand" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ProductsTable] ([Product_Number], [Description], [Units_On_Hand], [Price]) VALUES (@Product_Number, @Description, @Units_On_Hand, @Price);
SELECT Product_Number, Description, Units_On_Hand, Price FROM ProductsTable WHERE (Product_Number = @Product_Number)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Product_Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Product_Number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Units_On_Hand" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Units_On_Hand" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Product_Number, Description, Units_On_Hand, Price FROM dbo.ProductsTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ProductsTable] SET [Product_Number] = @Product_Number, [Description] = @Description, [Units_On_Hand] = @Units_On_Hand, [Price] = @Price WHERE (([Product_Number] = @Original_Product_Number) AND ([Description] = @Original_Description) AND ([Units_On_Hand] = @Original_Units_On_Hand) AND ([Price] = @Original_Price));
SELECT Product_Number, Description, Units_On_Hand, Price FROM ProductsTable WHERE (Product_Number = @Product_Number)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Product_Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Product_Number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Units_On_Hand" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Units_On_Hand" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Product_Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Product_Number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Units_On_Hand" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Units_On_Hand" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Product_Number" DataSetColumn="Product_Number" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="Units_On_Hand" DataSetColumn="Units_On_Hand" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ProductDBConnectionString (Settings)" DbObjectName="dbo.ProductsTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByMostExpensive" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByMostExpensive" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="FillByMostExpensive">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Product_Number, Description, Units_On_Hand, Price FROM dbo.ProductsTable WHERE Product_Number = 6</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ProductDBConnectionString (Settings)" DbObjectName="dbo.ProductsTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByPrice" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByPrice" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillByPrice">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Product_Number, Description, Units_On_Hand, Price FROM dbo.ProductsTable Order By Price</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ProductDBConnectionString (Settings)" DbObjectName="dbo.ProductsTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByPriceGreaterThan40" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByPriceGreaterThan40" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="FillByPriceGreaterThan40">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Product_Number, Description, Units_On_Hand, Price FROM dbo.ProductsTable WHERE Price &gt; 40</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ProductDBConnectionString (Settings)" DbObjectName="dbo.ProductsTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByUnits" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillByUnits" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillByUnits">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Product_Number, Description, Units_On_Hand, Price FROM dbo.ProductsTable WHERE Units_On_Hand &gt; 100</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TableTableAdapter" GeneratorDataComponentClassName="TableTableAdapter" Name="Table" UserDataComponentName="TableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ProductDBConnectionString (Settings)" DbObjectName="dbo.[Table]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Table] WHERE (([Product_Number] = @Original_Product_Number) AND ([Description] = @Original_Description) AND ([Units_On_Hand] = @Original_Units_On_Hand) AND ([Price] = @Original_Price))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Product_Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Product_Number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Units_On_Hand" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Units_On_Hand" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Table] ([Product_Number], [Description], [Units_On_Hand], [Price]) VALUES (@Product_Number, @Description, @Units_On_Hand, @Price);
SELECT Product_Number, Description, Units_On_Hand, Price FROM [Table] WHERE (Product_Number = @Product_Number)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Product_Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Product_Number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Units_On_Hand" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Units_On_Hand" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Product_Number, Description, Units_On_Hand, Price FROM dbo.[Table]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Table] SET [Product_Number] = @Product_Number, [Description] = @Description, [Units_On_Hand] = @Units_On_Hand, [Price] = @Price WHERE (([Product_Number] = @Original_Product_Number) AND ([Description] = @Original_Description) AND ([Units_On_Hand] = @Original_Units_On_Hand) AND ([Price] = @Original_Price));
SELECT Product_Number, Description, Units_On_Hand, Price FROM [Table] WHERE (Product_Number = @Product_Number)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Product_Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Product_Number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Units_On_Hand" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Units_On_Hand" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Product_Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Product_Number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Units_On_Hand" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Units_On_Hand" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Product_Number" DataSetColumn="Product_Number" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="Units_On_Hand" DataSetColumn="Units_On_Hand" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ProductDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ProductDBDataSet" msprop:Generator_UserDSName="ProductDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ProductsTable" msprop:Generator_TableClassName="ProductsTableDataTable" msprop:Generator_TableVarName="tableProductsTable" msprop:Generator_RowChangedName="ProductsTableRowChanged" msprop:Generator_TablePropName="ProductsTable" msprop:Generator_RowDeletingName="ProductsTableRowDeleting" msprop:Generator_RowChangingName="ProductsTableRowChanging" msprop:Generator_RowEvHandlerName="ProductsTableRowChangeEventHandler" msprop:Generator_RowDeletedName="ProductsTableRowDeleted" msprop:Generator_RowClassName="ProductsTableRow" msprop:Generator_UserTableName="ProductsTable" msprop:Generator_RowEvArgName="ProductsTableRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Product_Number" msprop:Generator_ColumnVarNameInTable="columnProduct_Number" msprop:Generator_ColumnPropNameInRow="Product_Number" msprop:Generator_ColumnPropNameInTable="Product_NumberColumn" msprop:Generator_UserColumnName="Product_Number" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Units_On_Hand" msprop:Generator_ColumnVarNameInTable="columnUnits_On_Hand" msprop:Generator_ColumnPropNameInRow="Units_On_Hand" msprop:Generator_ColumnPropNameInTable="Units_On_HandColumn" msprop:Generator_UserColumnName="Units_On_Hand" type="xs:int" />
              <xs:element name="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_UserColumnName="Price" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Table" msprop:Generator_TableClassName="TableDataTable" msprop:Generator_TableVarName="tableTable" msprop:Generator_RowChangedName="TableRowChanged" msprop:Generator_TablePropName="Table" msprop:Generator_RowDeletingName="TableRowDeleting" msprop:Generator_RowChangingName="TableRowChanging" msprop:Generator_RowEvHandlerName="TableRowChangeEventHandler" msprop:Generator_RowDeletedName="TableRowDeleted" msprop:Generator_RowClassName="TableRow" msprop:Generator_UserTableName="Table" msprop:Generator_RowEvArgName="TableRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Product_Number" msprop:Generator_ColumnVarNameInTable="columnProduct_Number" msprop:Generator_ColumnPropNameInRow="Product_Number" msprop:Generator_ColumnPropNameInTable="Product_NumberColumn" msprop:Generator_UserColumnName="Product_Number" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Units_On_Hand" msprop:Generator_ColumnVarNameInTable="columnUnits_On_Hand" msprop:Generator_ColumnPropNameInRow="Units_On_Hand" msprop:Generator_ColumnPropNameInTable="Units_On_HandColumn" msprop:Generator_UserColumnName="Units_On_Hand" type="xs:int" />
              <xs:element name="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_UserColumnName="Price" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ProductsTable" />
      <xs:field xpath="mstns:Product_Number" />
    </xs:unique>
    <xs:unique name="Table_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Table" />
      <xs:field xpath="mstns:Product_Number" />
    </xs:unique>
  </xs:element>
</xs:schema>